import yfinance as yf
import numpy as np
import matplotlib.pyplot as plt

googl=yf.download('googl',start='2016-01-01')['Adj Close']
logrtgoogl=np.log(googl/googl.shift(1))

#Euler is another version of brownion motion
r=0.025 #risk free rate
std=logrtgoogl.std()*250**0.5
std=np.array(std)
t=1
days= 250 #how many days thatyou want to predict
delta=t/days

iterations=10000 #how many scenerio that you want to simulate
z = np.random.standard_normal((days+1, iterations)) 
s= np.zeros_like(z)
s0=googl.iloc[-1] #define initial value= lastest stock price
s[0]=s0 #put data in to array by fill up position 0 with s0

#create loop for running simulation
for t in range(1, days+1):
    s[t] = s[t - 1]*np.exp((r - 0.5 * std ** 2) * delta + std * delta ** 0.5 * z[t])

plt.figure(figsize=(10, 6))
plt.plot(s[:, :10])
plt.title('10 of 10,000 scenerio for simulation of Google price')
plt.ylabel('Price')
plt.xlabel('Trading Days')
